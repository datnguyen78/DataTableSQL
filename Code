ALTER FUNCTION [dbo].[GetFullRevenueReport](@StartDate DATETIME = NULL, @EndDate DATETIME = NULL)
RETURNS TABLE
AS
RETURN
(
    SELECT 
        GameMachine.GameMachineID, 
        GameMachine.GameName, 
        CONCAT(Customer.FirstName, ' ', Customer.LastName) AS CustomerName,
        Customer.CustomerID,
        ISNULL(SUM(DepositTransaction.AmountDeposited), 0) AS TotalDeposit,
        ISNULL(SUM(GameTransaction.AmountDeducted), 0) AS TotalSpent,
        ISNULL(SUM(DepositTransaction.AmountDeposited) - SUM(GameTransaction.AmountDeducted), 0) AS TotalRevenue,
        DepositTransaction.Date AS DepositDate,
        DepositTransaction.Time AS DepositTime,
        GameTransaction.Date AS PlayDate,
        GameTransaction.StartTime AS PlayTime
    FROM Customer
    LEFT JOIN CustomerCard ON Customer.CustomerID = CustomerCard.CustomerID
    LEFT JOIN DepositTransaction ON CustomerCard.CardID = DepositTransaction.CustomerCardID
    LEFT JOIN GameTransaction ON CustomerCard.CardID = GameTransaction.CardID
    LEFT JOIN GameMachine ON GameTransaction.GameMachineID = GameMachine.GameMachineID
    WHERE 
        (@StartDate IS NULL OR @EndDate IS NULL) 
        OR (DepositTransaction.Date BETWEEN @StartDate AND @EndDate) 
        OR (GameTransaction.Date BETWEEN @StartDate AND @EndDate)
    GROUP BY 
        GameMachine.GameMachineID, 
        GameMachine.GameName, 
        Customer.CustomerID, 
        Customer.FirstName, 
        Customer.LastName, 
        DepositTransaction.Date, 
        DepositTransaction.Time, 
        GameTransaction.Date, 
        GameTransaction.StartTime
);

--Procedure
CREATE PROCEDURE GetStaffRevenue
    @StaffID INT,
    @StartDate DATE = NULL,
    @EndDate DATE = NULL
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        Staff.StaffID,
        Staff.FirstName + ' ' + Staff.LastName AS StaffName,
        COUNT(DepositTransaction.DepositID) AS TotalTransactions,
        ISNULL(SUM(DepositTransaction.AmountDeposited), 0) AS TotalRevenue
    FROM Staff
    LEFT JOIN DepositTransaction ON Staff.StaffID = DepositTransaction.CashierID
    WHERE Staff.StaffID = @StaffID
        AND (@StartDate IS NULL OR @EndDate IS NULL 
             OR DepositTransaction.Date BETWEEN @StartDate AND @EndDate)
    GROUP BY Staff.StaffID, Staff.FirstName, Staff.LastName;
END;

--Customer
alter PROCEDURE GetCustomerFinancialSummary
    @CustomerID INT,
    @StartDate DATE = NULL,
    @EndDate DATE = NULL
AS
BEGIN
    SET NOCOUNT ON;

    -- Lấy chi tiết từng giao dịch nạp tiền và chơi game của khách hàng
    SELECT 
        Customer.CustomerID,
        CONCAT(FirstName, ' ', LastName) AS CustomerName,
        AmountDeposited AS DepositAmount,
        AmountDeducted AS SpentAmount,
        DepositTransaction.Date AS DepositDate,
        GameTransaction.Date AS SpentDate,
        DepositTransaction.Time AS DepositTime,
        GameTransaction.StartTime AS SpentTime,
        
        -- Tính tổng tiền nạp của khách hàng trong khoảng thời gian đã chọn
        (SELECT SUM(AmountDeposited) 
         FROM DepositTransaction 
         WHERE CustomerCardID = CustomerCard.CardID
           AND (@StartDate IS NULL OR Date BETWEEN @StartDate AND @EndDate)
        ) AS TotalDeposit,
        
        -- Tính tổng tiền đã chơi của khách hàng trong khoảng thời gian đã chọn
        (SELECT SUM(AmountDeducted) 
         FROM GameTransaction 
         WHERE CardID = CustomerCard.CardID
           AND (@StartDate IS NULL OR Date BETWEEN @StartDate AND @EndDate)
        ) AS TotalSpent

    FROM Customer
    LEFT JOIN CustomerCard ON Customer.CustomerID = CustomerCard.CustomerID
    LEFT JOIN DepositTransaction ON CustomerCard.CardID = DepositTransaction.CustomerCardID
    LEFT JOIN GameTransaction ON CustomerCard.CardID = GameTransaction.CardID

    WHERE Customer.CustomerID = @CustomerID
      AND (@StartDate IS NULL OR DepositTransaction.Date BETWEEN @StartDate AND @EndDate
                         OR GameTransaction.Date BETWEEN @StartDate AND @EndDate)

    -- Sắp xếp theo ngày giao dịch
    ORDER BY COALESCE(DepositTransaction.Date, GameTransaction.Date), 
             COALESCE(DepositTransaction.Time, GameTransaction.StartTime);
END;
go
--Usage
EXEC GetCustomerFinancialSummary @CustomerID = 5, @StartDate = '2022-03-01', @EndDate = '2025-03-31';
--PhieuNhap
SELECT        dbo.StockReceipt.ReceiptID, dbo.StockReceipt.ReceiptDate, TK.SL
FROM            dbo.StockReceipt INNER JOIN
                             (SELECT        ReceiptID, COUNT(Quantity) AS SL
                               FROM            dbo.StockReceiptDetail
                               GROUP BY ReceiptID) AS TK ON dbo.StockReceipt.ReceiptID = TK.ReceiptID

--PhieuXuat

SELECT        derivedtbl_1.CompensationID, derivedtbl_2.GroupID, derivedtbl_2.GroupName, derivedtbl_2.ProductType, derivedtbl_2.ProductName, dbo.StockCompensationReceipt.IssuedBy, dbo.StockCompensationReceipt.ApprovedBy, 
                         dbo.StockCompensationReceipt.TimeIssued, dbo.StockCompensationReceipt.DateIssued, derivedtbl_1.SL, dbo.StockCompensationReceipt.Reason
FROM            dbo.StockCompensationReceipt INNER JOIN
                             (SELECT        CompensationID, COUNT(Quantity) AS SL
                               FROM            dbo.StockCompensationDetail
                               GROUP BY CompensationID) AS derivedtbl_1 ON dbo.StockCompensationReceipt.CompensationID = derivedtbl_1.CompensationID CROSS JOIN
                             (SELECT        dbo.Product.GroupID, derivedtbl_1_1.GroupName, derivedtbl_1_1.ProductType, dbo.Product.Name AS ProductName
                               FROM            dbo.Product INNER JOIN
                                                             (SELECT        GroupID, GroupName, ProductType
                                                               FROM            dbo.ProductGroup
                                                               GROUP BY GroupID, GroupName, ProductType) AS derivedtbl_1_1 ON dbo.Product.GroupID = derivedtbl_1_1.GroupID) AS derivedtbl_2
